/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

/** npx gltfjsx boschbetonV101.glb */

import React, { useRef, useState } from "react";
import { useGLTF } from "@react-three/drei";
import { LoopOnce } from "three";
// import { useSpring, animated } from "@react-spring/three";

export default function Model({ ...props }) {
  const group = useRef();
  const wallRight = useRef();
  const sidRight = useRef();
  const animate = useRef();

  const { nodes, materials } = useGLTF("/boschbetonV101.glb");

  const createSideLoop = () => {
    let side = [];
    for (var i = 0; i < props.loop; i++) {
      var z = i;
      side[i] = [z];
    }
    return side;
  };

  const sides = createSideLoop().map((cords, i) => {
    return (
      <>
        <mesh
          ref={sidRight}
          key={`right-${i}`}
          geometry={nodes["sid-right"].geometry}
          material={nodes["sid-right"].material}
          // position={position}
          position={[2.77 + props.poX, 0.74, cords * -1]}
        />
        <mesh
          key={`left-${i}`}
          geometry={nodes["sid-left"].geometry}
          material={nodes["sid-left"].material}
          position={[-4.73, 0.74, cords * -1]}
          rotation={[-Math.PI, 1.57, -Math.PI]}
        />
      </>
    );
  });

  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        geometry={nodes.car001.geometry}
        material={materials.Material}
        position={[-0.14, 1.06, 0.11]}
        rotation={[0, -Math.PI / 2, 0]}
      />
      {sides}

      {/* <mesh
        geometry={nodes.flour001.geometry}
        material={nodes.flour001.material}
        position={[23.27, 0.24, -39.93]}
      /> */}
    </group>
  );
}

useGLTF.preload("/boschbetonV101.glb");
